Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ARRAY
    ASSERT
    BEGIN
    CASE
    COMILLA
    COMMENT
    COMMENT_LINE
    DEQUAL
    DIV
    DIVIDE
    DO
    DOT
    ELSE
    END
    EQUAL
    FOR
    GREATER
    GREATEREQUAL
    IF
    ISEQUAL
    LBLOCK
    LBRACKET
    LESS
    LESSEQUAL
    MINUS
    MINUSMINUS
    NOT
    NUMBER
    OF
    OR
    PLUS
    PLUSPLUS
    POWER
    PROCEDURE
    QUOTE
    RBLOCK
    RBRACKET
    READ
    READLN
    TEXT
    THEN
    TIMES
    VAR
    WHILE
    WRITE
    WRITELN

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON declaration_list
Rule 2     program -> PROGRAM ID LPAREN argm_list RPAREN SEMICOLON declaration_list
Rule 3     argm_list -> ID COMMA argm_list
Rule 4     argm_list -> ID
Rule 5     declaration_list -> declaration_list declaration
Rule 6     declaration_list -> declaration
Rule 7     declaration -> header_declaration
Rule 8     declaration -> fun_declaration
Rule 9     header_declaration -> USES ID SEMICOLON
Rule 10    fun_declaration -> FUNCTION ID LPAREN params RPAREN COLON identifiers SEMICOLON
Rule 11    params -> params_list
Rule 12    params_list -> param SEMICOLON params_list
Rule 13    params_list -> param
Rule 14    param -> id_list COLON identifiers
Rule 15    id_list -> id_list COMMA ID
Rule 16    id_list -> ID
Rule 17    identifiers -> INTEGER
Rule 18    identifiers -> FLOAT
Rule 19    identifiers -> BOOLEAN
Rule 20    identifiers -> CHAR
Rule 21    empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ARRAY                : 
ASSERT               : 
BEGIN                : 
BOOLEAN              : 19
CASE                 : 
CHAR                 : 20
COLON                : 10 14
COMILLA              : 
COMMA                : 3 15
COMMENT              : 
COMMENT_LINE         : 
DEQUAL               : 
DIV                  : 
DIVIDE               : 
DO                   : 
DOT                  : 
ELSE                 : 
END                  : 
EQUAL                : 
FLOAT                : 18
FOR                  : 
FUNCTION             : 10
GREATER              : 
GREATEREQUAL         : 
ID                   : 1 2 3 4 9 10 15 16
IF                   : 
INTEGER              : 17
ISEQUAL              : 
LBLOCK               : 
LBRACKET             : 
LESS                 : 
LESSEQUAL            : 
LPAREN               : 2 10
MINUS                : 
MINUSMINUS           : 
NOT                  : 
NUMBER               : 
OF                   : 
OR                   : 
PLUS                 : 
PLUSPLUS             : 
POWER                : 
PROCEDURE            : 
PROGRAM              : 1 2
QUOTE                : 
RBLOCK               : 
RBRACKET             : 
READ                 : 
READLN               : 
RPAREN               : 2 10
SEMICOLON            : 1 2 9 10 12
TEXT                 : 
THEN                 : 
TIMES                : 
USES                 : 9
VAR                  : 
WHILE                : 
WRITE                : 
WRITELN              : 
error                : 

Nonterminals, with rules where they appear

argm_list            : 2 3
declaration          : 5 6
declaration_list     : 1 2 5
empty                : 
fun_declaration      : 8
header_declaration   : 7
id_list              : 14 15
identifiers          : 10 14
param                : 12 13
params               : 10
params_list          : 11 12
program              : 0

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON declaration_list
    (2) program -> . PROGRAM ID LPAREN argm_list RPAREN SEMICOLON declaration_list

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON declaration_list
    (2) program -> PROGRAM . ID LPAREN argm_list RPAREN SEMICOLON declaration_list

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON declaration_list
    (2) program -> PROGRAM ID . LPAREN argm_list RPAREN SEMICOLON declaration_list

    SEMICOLON       shift and go to state 4
    LPAREN          shift and go to state 5


state 4

    (1) program -> PROGRAM ID SEMICOLON . declaration_list
    (5) declaration_list -> . declaration_list declaration
    (6) declaration_list -> . declaration
    (7) declaration -> . header_declaration
    (8) declaration -> . fun_declaration
    (9) header_declaration -> . USES ID SEMICOLON
    (10) fun_declaration -> . FUNCTION ID LPAREN params RPAREN COLON identifiers SEMICOLON

    USES            shift and go to state 10
    FUNCTION        shift and go to state 11

    declaration_list               shift and go to state 6
    declaration                    shift and go to state 7
    header_declaration             shift and go to state 8
    fun_declaration                shift and go to state 9

state 5

    (2) program -> PROGRAM ID LPAREN . argm_list RPAREN SEMICOLON declaration_list
    (3) argm_list -> . ID COMMA argm_list
    (4) argm_list -> . ID

    ID              shift and go to state 12

    argm_list                      shift and go to state 13

state 6

    (1) program -> PROGRAM ID SEMICOLON declaration_list .
    (5) declaration_list -> declaration_list . declaration
    (7) declaration -> . header_declaration
    (8) declaration -> . fun_declaration
    (9) header_declaration -> . USES ID SEMICOLON
    (10) fun_declaration -> . FUNCTION ID LPAREN params RPAREN COLON identifiers SEMICOLON

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON declaration_list .)
    USES            shift and go to state 10
    FUNCTION        shift and go to state 11

    declaration                    shift and go to state 14
    header_declaration             shift and go to state 8
    fun_declaration                shift and go to state 9

state 7

    (6) declaration_list -> declaration .

    USES            reduce using rule 6 (declaration_list -> declaration .)
    FUNCTION        reduce using rule 6 (declaration_list -> declaration .)
    $end            reduce using rule 6 (declaration_list -> declaration .)


state 8

    (7) declaration -> header_declaration .

    USES            reduce using rule 7 (declaration -> header_declaration .)
    FUNCTION        reduce using rule 7 (declaration -> header_declaration .)
    $end            reduce using rule 7 (declaration -> header_declaration .)


state 9

    (8) declaration -> fun_declaration .

    USES            reduce using rule 8 (declaration -> fun_declaration .)
    FUNCTION        reduce using rule 8 (declaration -> fun_declaration .)
    $end            reduce using rule 8 (declaration -> fun_declaration .)


state 10

    (9) header_declaration -> USES . ID SEMICOLON

    ID              shift and go to state 15


state 11

    (10) fun_declaration -> FUNCTION . ID LPAREN params RPAREN COLON identifiers SEMICOLON

    ID              shift and go to state 16


state 12

    (3) argm_list -> ID . COMMA argm_list
    (4) argm_list -> ID .

    COMMA           shift and go to state 17
    RPAREN          reduce using rule 4 (argm_list -> ID .)


state 13

    (2) program -> PROGRAM ID LPAREN argm_list . RPAREN SEMICOLON declaration_list

    RPAREN          shift and go to state 18


state 14

    (5) declaration_list -> declaration_list declaration .

    USES            reduce using rule 5 (declaration_list -> declaration_list declaration .)
    FUNCTION        reduce using rule 5 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 5 (declaration_list -> declaration_list declaration .)


state 15

    (9) header_declaration -> USES ID . SEMICOLON

    SEMICOLON       shift and go to state 19


state 16

    (10) fun_declaration -> FUNCTION ID . LPAREN params RPAREN COLON identifiers SEMICOLON

    LPAREN          shift and go to state 20


state 17

    (3) argm_list -> ID COMMA . argm_list
    (3) argm_list -> . ID COMMA argm_list
    (4) argm_list -> . ID

    ID              shift and go to state 12

    argm_list                      shift and go to state 21

state 18

    (2) program -> PROGRAM ID LPAREN argm_list RPAREN . SEMICOLON declaration_list

    SEMICOLON       shift and go to state 22


state 19

    (9) header_declaration -> USES ID SEMICOLON .

    USES            reduce using rule 9 (header_declaration -> USES ID SEMICOLON .)
    FUNCTION        reduce using rule 9 (header_declaration -> USES ID SEMICOLON .)
    $end            reduce using rule 9 (header_declaration -> USES ID SEMICOLON .)


state 20

    (10) fun_declaration -> FUNCTION ID LPAREN . params RPAREN COLON identifiers SEMICOLON
    (11) params -> . params_list
    (12) params_list -> . param SEMICOLON params_list
    (13) params_list -> . param
    (14) param -> . id_list COLON identifiers
    (15) id_list -> . id_list COMMA ID
    (16) id_list -> . ID

    ID              shift and go to state 23

    params                         shift and go to state 24
    params_list                    shift and go to state 25
    param                          shift and go to state 26
    id_list                        shift and go to state 27

state 21

    (3) argm_list -> ID COMMA argm_list .

    RPAREN          reduce using rule 3 (argm_list -> ID COMMA argm_list .)


state 22

    (2) program -> PROGRAM ID LPAREN argm_list RPAREN SEMICOLON . declaration_list
    (5) declaration_list -> . declaration_list declaration
    (6) declaration_list -> . declaration
    (7) declaration -> . header_declaration
    (8) declaration -> . fun_declaration
    (9) header_declaration -> . USES ID SEMICOLON
    (10) fun_declaration -> . FUNCTION ID LPAREN params RPAREN COLON identifiers SEMICOLON

    USES            shift and go to state 10
    FUNCTION        shift and go to state 11

    declaration_list               shift and go to state 28
    declaration                    shift and go to state 7
    header_declaration             shift and go to state 8
    fun_declaration                shift and go to state 9

state 23

    (16) id_list -> ID .

    COLON           reduce using rule 16 (id_list -> ID .)
    COMMA           reduce using rule 16 (id_list -> ID .)


state 24

    (10) fun_declaration -> FUNCTION ID LPAREN params . RPAREN COLON identifiers SEMICOLON

    RPAREN          shift and go to state 29


state 25

    (11) params -> params_list .

    RPAREN          reduce using rule 11 (params -> params_list .)


state 26

    (12) params_list -> param . SEMICOLON params_list
    (13) params_list -> param .

    SEMICOLON       shift and go to state 30
    RPAREN          reduce using rule 13 (params_list -> param .)


state 27

    (14) param -> id_list . COLON identifiers
    (15) id_list -> id_list . COMMA ID

    COLON           shift and go to state 31
    COMMA           shift and go to state 32


state 28

    (2) program -> PROGRAM ID LPAREN argm_list RPAREN SEMICOLON declaration_list .
    (5) declaration_list -> declaration_list . declaration
    (7) declaration -> . header_declaration
    (8) declaration -> . fun_declaration
    (9) header_declaration -> . USES ID SEMICOLON
    (10) fun_declaration -> . FUNCTION ID LPAREN params RPAREN COLON identifiers SEMICOLON

    $end            reduce using rule 2 (program -> PROGRAM ID LPAREN argm_list RPAREN SEMICOLON declaration_list .)
    USES            shift and go to state 10
    FUNCTION        shift and go to state 11

    declaration                    shift and go to state 14
    header_declaration             shift and go to state 8
    fun_declaration                shift and go to state 9

state 29

    (10) fun_declaration -> FUNCTION ID LPAREN params RPAREN . COLON identifiers SEMICOLON

    COLON           shift and go to state 33


state 30

    (12) params_list -> param SEMICOLON . params_list
    (12) params_list -> . param SEMICOLON params_list
    (13) params_list -> . param
    (14) param -> . id_list COLON identifiers
    (15) id_list -> . id_list COMMA ID
    (16) id_list -> . ID

    ID              shift and go to state 23

    param                          shift and go to state 26
    params_list                    shift and go to state 34
    id_list                        shift and go to state 27

state 31

    (14) param -> id_list COLON . identifiers
    (17) identifiers -> . INTEGER
    (18) identifiers -> . FLOAT
    (19) identifiers -> . BOOLEAN
    (20) identifiers -> . CHAR

    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 37
    BOOLEAN         shift and go to state 38
    CHAR            shift and go to state 39

    identifiers                    shift and go to state 35

state 32

    (15) id_list -> id_list COMMA . ID

    ID              shift and go to state 40


state 33

    (10) fun_declaration -> FUNCTION ID LPAREN params RPAREN COLON . identifiers SEMICOLON
    (17) identifiers -> . INTEGER
    (18) identifiers -> . FLOAT
    (19) identifiers -> . BOOLEAN
    (20) identifiers -> . CHAR

    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 37
    BOOLEAN         shift and go to state 38
    CHAR            shift and go to state 39

    identifiers                    shift and go to state 41

state 34

    (12) params_list -> param SEMICOLON params_list .

    RPAREN          reduce using rule 12 (params_list -> param SEMICOLON params_list .)


state 35

    (14) param -> id_list COLON identifiers .

    SEMICOLON       reduce using rule 14 (param -> id_list COLON identifiers .)
    RPAREN          reduce using rule 14 (param -> id_list COLON identifiers .)


state 36

    (17) identifiers -> INTEGER .

    SEMICOLON       reduce using rule 17 (identifiers -> INTEGER .)
    RPAREN          reduce using rule 17 (identifiers -> INTEGER .)


state 37

    (18) identifiers -> FLOAT .

    SEMICOLON       reduce using rule 18 (identifiers -> FLOAT .)
    RPAREN          reduce using rule 18 (identifiers -> FLOAT .)


state 38

    (19) identifiers -> BOOLEAN .

    SEMICOLON       reduce using rule 19 (identifiers -> BOOLEAN .)
    RPAREN          reduce using rule 19 (identifiers -> BOOLEAN .)


state 39

    (20) identifiers -> CHAR .

    SEMICOLON       reduce using rule 20 (identifiers -> CHAR .)
    RPAREN          reduce using rule 20 (identifiers -> CHAR .)


state 40

    (15) id_list -> id_list COMMA ID .

    COLON           reduce using rule 15 (id_list -> id_list COMMA ID .)
    COMMA           reduce using rule 15 (id_list -> id_list COMMA ID .)


state 41

    (10) fun_declaration -> FUNCTION ID LPAREN params RPAREN COLON identifiers . SEMICOLON

    SEMICOLON       shift and go to state 42


state 42

    (10) fun_declaration -> FUNCTION ID LPAREN params RPAREN COLON identifiers SEMICOLON .

    USES            reduce using rule 10 (fun_declaration -> FUNCTION ID LPAREN params RPAREN COLON identifiers SEMICOLON .)
    FUNCTION        reduce using rule 10 (fun_declaration -> FUNCTION ID LPAREN params RPAREN COLON identifiers SEMICOLON .)
    $end            reduce using rule 10 (fun_declaration -> FUNCTION ID LPAREN params RPAREN COLON identifiers SEMICOLON .)

